## Install Ubuntu server OS (version 16)
## Make sure you have internet access because we need it for all package installation
## Upload the project into home directory using filezilla

## Copy project to /opt/ directory [Any directory]
===========================================================
sudo cp -avr /home/ubuntu/workflow_V1.0.0.tar.gz /opt/

## Extract the project folder and rename
===========================================================
sudo tar -xvzf /opt/workflow-MCCI_V1.0.0.tar.gz
sudo mv /opt/workflow-MCCI_V1.0.0 /opt/greenoffice

## change ownership and permission
===========================================================
sudo chown -R $USER:$USER /opt/greenoffice
sudo chmod -R 775 /opt/greenoffice

## Install dependencies. Reference weasyprint (http://weasyprint.readthedocs.io/en/latest/install.html#debian-ubuntu)
===========================================================================================================================
sudo apt-get install build-essential python3-dev python3-pip python3-cffi libcairo2 libpango-1.0-0 libpangocairo-1.0.0 libgdk-pixbuf2.0-0 libffi-dev shared-mime-info
libmemcached-dev libz-dev

## Creating Virtual Environment -3.6
===================================
sudo apt install python-pip
sudo pip install virtualenv
cd /opt
virtualenv -p python3 venv --no-site-packages

## activate venv - install requirments
============================================
source /opt/venv/bin/activate
cd /opt/greenoffice
pip install -r requirments.txt

## Install postgresql and create database & user - 14
===================================================
sudo apt-get install wget ca-certificates
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
sudo apt-get update
sudo apt-get install postgresql postgresql-contrib

sudo -i -u postgres
psql
create role meghnabankuser with password '123456' superuser login; [any_name, make it related to company]
create database meghnabank;
GRANT ALL PRIVILEGES ON DATABASE database_name TO username;
\q
exit

## Edit license file and change database user password
==========================================================
sudo nano /opt/greenoffice/conf/licensed_prod.py

import datetime
DEBUG = False [conditional]
DATABASES = {
'default': {
'ENGINE': 'django.db.backends.postgresql',
'NAME': 'greenoffice',
'USER': 'green_user',
'PASSWORD': 'green_passwd@123',
'HOST': 'localhost',
'PORT': '5432',
}

## Install Java -11
==========================================
sudo add-apt-repository ppa:openjdk-r/ppa
sudo apt-get update
sudo apt-get install openjdk-8-jdk

##Install Libreoffice
==========================================
sudo add-apt-repository ppa:libreoffice/ppa
sudo apt-get update
sudo apt-get install libreoffice

## Install gunicorn - and configure
============================================
sudo apt-get install gunicorn
sudo cp services/gunicorn.service /etc/systemd/system/
sudo nano /etc/systemd/system/gunicorn.service
[Unit]
Description=gunicorn daemon
After=network.target
[Service]
User=pcname
Group=www-data
WorkingDirectory=/opt/greenoffice
ExecStart=/opt/venv/bin/gunicorn --workers 3 --limit-request-line 8000 --bind unix:/opt/greenoffice/greenoffice.sock conf.wsgi:application
[Install]
WantedBy=multi-user.target
then save and exit
sudo systemctl daemon-reload
sudo systemctl start gunicorn.service
sudo systemctl enable gunicorn.service
sudo systemctl status gunicorn.service
//if give error
pip install gunicorn

## Install nginx - configure virtual host
=================================================
sudo apt-get install nginx
sudo nano /etc/nginx/sites-available/greenoffice
server {
listen 80;
server_name 192.168.1.100; [server_IP]
location = /favicon.ico { access_log off; log_not_found off; }
location /static/ {
root /opt/greenoffice;[Project_directory]
}
location /media/ {
alias /opt/greenoffice/media/;
}
location / {
include proxy_params;
proxy_pass http://unix:/opt/greenoffice/greenoffice.sock;
}
}
then save & exit
sudo ln -s /etc/nginx/sites-available/greenoffice /etc/nginx/sites-enabled/

sudo nano /etc/nginx/nginx.conf
Add these lines under http block
Client_header_buffer_size 64k;
large_client_header_buffers 4 64k;
client_max_body_size 50M;
then save and exit
sudo systemctl restart nginx.service
sudo systemctl enable nginx.service
sudo systemctl restart gunicorn.service

## Install Elastic search
==========================================
wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
sudo apt-get install apt-transport-https
echo "deb https://artifacts.elastic.co/packages/5.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-5.x.list
sudo apt-get update && sudo apt-get install elasticsearch
sudo /bin/systemctl daemon-reload
sudo /bin/systemctl enable elasticsearch.service
	
curl localhost:9200
{
"name" : "yl7GdRP",
"cluster_name" : "elasticsearch",
"cluster_uuid" : "Dr1IWGzySAiexQQk362pvg",
"version" : {
"number" : "5.6.4",
"build_hash" : "8bbedf5",
"build_date" : "2017-10-31T18:55:38.105Z",
"build_snapshot" : false,
"lucene_version" : "6.6.1"
},
"tagline" : "You Know, for Search"
}

Install Redis
====================================
sudo apt install redis
<expo!@1Wl$%d1g1fl0w@qsef>

## DATABASE Migration
====================================
cd /opt/greenoffice
./manage.py migrate
./manage.py loaddata import_sql/bootup.json
Login with user: admin and pass: admin
